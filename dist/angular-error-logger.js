angular.module("angularErrorLogger",[]),angular.module("angularErrorLogger").factory("exceptionSender",["$injector","$log",function(r,e){"use strict";return{sendException:function(o,n){e.debug("logging error to server side: serviceUrl = "+o),e.debug("logging error to server side...",n);var g=r.get("$http");g.post(o,n).then(function(){e.info("Error logged")},function(r){e.warn("Error logging to server side failed"),e.log(r)})}}}]),angular.module("angularErrorLogger").provider("$exceptionHandler",{$get:["angularErrorLoggerService",function(r){"use strict";return r}]}),angular.module("angularErrorLogger").factory("angularErrorLoggerService",["$log","$window","exceptionSender","ANGULAR_ERROR_LOGGER_CONFIG",function(r,e,o,n){"use strict";function g(g,t){var a=[],i=g?g.toString():"no exception",u=g?g.stack?g.stack.toString():"no stack":"no exception",c={navigatorAppName:navigator.appName,navigatorUserAgent:navigator.userAgent},l=angular.toJson({errorUrl:e.location.href,errorMessage:i,stackTrace:u,cause:t||"no cause",browserInfo:c});-1===a.indexOf(u)?(n&&n.url&&o.sendException(n.url,l),a.push(u)):r.debug("Dublicated error")}function t(e,o){r.debug("errorLogService.log()"),r.error.apply(r,arguments),g(e,o)}return t}]);